C51 COMPILER V8.09   MAIN                                                                  11/15/2008 16:02:28 PAGE 1   


C51 COMPILER V8.09, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /****************************************************
   2                 Lesson  : 9
   3                     Neme    : LCD FUCTIONS
   4                     Details : The LCD has two line and each line has 16 character
   5                                           the lcd works here 4 bit mode 
   6                                           the display is show various fuction of lcd
   7          ******************************************************/
   8          #include<REG51.H>
   9          //Fuction Prototypes
  10          void delay(unsigned int);
  11          void lcd_string(unsigned char *p);
  12          void lcd_data(unsigned char );
  13          void lcd_cmd(unsigned char );
  14          
  15          
  16          sbit EN = P3^2;
  17          sbit RS = P3^3;
  18          sbit RW = P3^4;
  19          sbit light = P3^5;
  20          
  21          #define lcddata P1;
  22          
  23          // Program Starts Here
  24          void main()
  25          {
  26   1               light=0;
  27   1               lcd_cmd(0x38); //LCD 4 bit Mode
  28   1               delay(1);
  29   1               lcd_cmd(0x06); // display move cursor to right 
  30   1               delay(1);
  31   1               lcd_cmd(0x0C); // LCD On, & cursor     OFF
  32   1               delay(1);
  33   1               lcd_cmd(0x01);  // LCD Clear 
  34   1               delay(1);
  35   1               lcd_cmd(0x80); // LCD start 1st line
  36   1               delay(1);
  37   1               lcd_string("     HELLO     ");
  38   1               delay(100);
  39   1               lcd_cmd(0xc0);  // LCD start 2nd line
  40   1               delay(1);
  41   1           lcd_string(" AND WELCOME ");
  42   1               delay(400);
  43   1               while(1)
  44   1               {
  45   2               lcd_cmd(0x01);  // LCD Clear 
  46   2               delay(1);
  47   2               lcd_string("LCD FUCTIONS   ");
  48   2               delay(400);
  49   2               lcd_cmd(0x01);  // LCD Clear 
  50   2               delay(1);
  51   2               lcd_string("FIRST LINE   ");
  52   2               delay(1);
  53   2               delay(400);
  54   2               lcd_cmd(0x01);  // LCD Clear 
  55   2               delay(1);
C51 COMPILER V8.09   MAIN                                                                  11/15/2008 16:02:28 PAGE 2   

  56   2               lcd_cmd(0xc0);  // LCD start 2nd line
  57   2               delay(1);
  58   2               lcd_string("SECOND LINE   ");
  59   2                delay(400);
  60   2               lcd_cmd(0x01);  // LCD Clear 
  61   2               delay(1);
  62   2               lcd_string("CURSOR ON   ");
  63   2               delay(1);
  64   2               lcd_cmd(0xc0);  // LCD start 2nd line
  65   2               lcd_cmd(0x0E);  // CURSOR ON
  66   2               delay(500);
  67   2               lcd_cmd(0x01);  // LCD Clear 
  68   2               delay(1);
  69   2               lcd_string("CURSOR OFF  ");
  70   2               delay(1);
  71   2               lcd_cmd(0xc0);  // LCD start 2nd line
  72   2               lcd_cmd(0x0C);  // CURSOR OFF
  73   2               delay(500);
  74   2           lcd_cmd(0x01);      // LCD Clear 
  75   2               delay(1);
  76   2               lcd_string("CURSOR BLINK");
  77   2               delay(1);
  78   2               lcd_cmd(0xc0);  // LCD start 2nd line
  79   2               lcd_cmd(0x0F);  // CURSOR BLINK
  80   2               delay(500);
  81   2               lcd_cmd(0x01);  // LCD Clear 
  82   2               delay(1);
  83   2               lcd_string("CURSOR  RIGHT");
  84   2               delay(1);
  85   2               lcd_cmd(0xc0);  // LCD start 2nd line
  86   2               lcd_cmd(0x14);  // CURSOR RIGHT
  87   2               delay(100);
  88   2               lcd_cmd(0x14);  // CURSOR RIGHT
  89   2               delay(100);
  90   2               lcd_cmd(0x14);  // CURSOR RIGHT
  91   2               delay(100);
  92   2               lcd_cmd(0x14);  // CURSOR RIGHT
  93   2               delay(100);
  94   2               lcd_cmd(0x14);  // CURSOR RIGHT
  95   2               delay(100);
  96   2               delay(500);
  97   2               lcd_cmd(0x01);  // LCD Clear 
  98   2               delay(1);
  99   2               lcd_string("CURSOR  LEFT");
 100   2               delay(1);
 101   2               lcd_cmd(0xc5);  // LCD start 2nd line
 102   2               lcd_cmd(0x10);  // CURSOR LEFT
 103   2               delay(100);
 104   2               lcd_cmd(0x10);  // CURSOR LEFT
 105   2               delay(100);
 106   2               lcd_cmd(0x10);  // CURSOR LEFT
 107   2               delay(100);
 108   2               lcd_cmd(0x10);  // CURSOR LEFT
 109   2               delay(100);
 110   2               lcd_cmd(0x10);  // CURSOR LEFT
 111   2               delay(100);
 112   2               delay(500);
 113   2               lcd_cmd(0x01);  // LCD Clear 
 114   2               lcd_cmd(0x0C);  // CURSOR OFF
 115   2               delay(1);
 116   2               lcd_string("LCD OFF");
 117   2               delay(200);
C51 COMPILER V8.09   MAIN                                                                  11/15/2008 16:02:28 PAGE 3   

 118   2               light=1;
 119   2               lcd_cmd(0x0A);  // LCD OFF
 120   2               delay(500);
 121   2               lcd_cmd(0x01);  // LCD Clear 
 122   2               delay(1);
 123   2               lcd_string("LCD ON");
 124   2               delay(1);
 125   2               light=0;
 126   2               lcd_cmd(0x0C);  // LCD ON
 127   2               delay(500);
 128   2           }
 129   1              
 130   1      }
 131          
 132          void lcd_string(unsigned char *p)
 133          {
 134   1              while(*p != '\0')
 135   1              {
 136   2              lcd_data(*p);
 137   2              p++;
 138   2              }
 139   1      }
 140          
 141          void lcd_data(unsigned char x)
 142          {
 143   1        RW=0;
 144   1        RS=1;
 145   1        P1 = x;
 146   1        EN=1;
 147   1        delay(1);
 148   1        EN=0;
 149   1       }
 150          
 151          void lcd_cmd(unsigned char z)
 152          {
 153   1        RW=0;
 154   1        RS=0;
 155   1        P1 = z;
 156   1        EN =1;
 157   1        delay(1);
 158   1        EN=0;
 159   1       }
 160          
 161          
 162          
 163          void delay(unsigned int tt)
 164          {
 165   1              unsigned int a,b;
 166   1              for(a=0;a<tt;a++)
 167   1                      {
 168   2                              for(b=0;b<1000;b++)
 169   2                              ;
 170   2                      }
 171   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    635    ----
   CONSTANT SIZE    =    156    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
C51 COMPILER V8.09   MAIN                                                                  11/15/2008 16:02:28 PAGE 4   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
