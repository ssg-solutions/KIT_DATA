

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Oct 12 15:33:32 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0005                     _PORTAbits	set	5
   168     042C                     _TRISA4	set	1068
   169                           
   170                           	psect	cinit
   171     07FC                     start_initialization:	
   172                           ; #config settings
   173                           
   174     07FC                     __initialization:
   175     07FC                     end_of_initialization:	
   176                           ;End of C runtime variable initialization code
   177                           
   178     07FC                     __end_of__initialization:
   179     07FC  0183               	clrf	3
   180     07FD  120A  118A  2FAF   	ljmp	_main	;jump to C main() function
   181                           
   182                           	psect	cstackCOMMON
   183     0070                     __pcstackCOMMON:
   184     0070                     ?_servo0:
   185     0070                     ??_servo0:	
   186                           ; 1 bytes @ 0x0
   187                           
   188     0070                     ?_servo90:	
   189                           ; 1 bytes @ 0x0
   190                           
   191     0070                     ??_servo90:	
   192                           ; 1 bytes @ 0x0
   193                           
   194     0070                     ?_servo180:	
   195                           ; 1 bytes @ 0x0
   196                           
   197     0070                     ??_servo180:	
   198                           ; 1 bytes @ 0x0
   199                           
   200     0070                     ?_main:	
   201                           ; 1 bytes @ 0x0
   202                           
   203                           
   204                           ; 1 bytes @ 0x0
   205     0070                     	ds	2
   206     0072                     servo0@i:
   207     0072                     servo90@i:	
   208                           ; 2 bytes @ 0x2
   209                           
   210     0072                     servo180@i:	
   211                           ; 2 bytes @ 0x2
   212                           
   213                           
   214                           ; 2 bytes @ 0x2
   215     0072                     	ds	2
   216     0074                     ??_main:
   217                           
   218                           ; 1 bytes @ 0x4
   219     0074                     	ds	3
   220                           
   221                           	psect	maintext
   222     07AF                     __pmaintext:	
   223 ;;
   224 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   225 ;;
   226 ;; *************** function _main *****************
   227 ;; Defined at:
   228 ;;		line 54 in file "main.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		wreg, status,2, status,0, pclath, cstack
   237 ;; Tracked objects:
   238 ;;		On entry : B00/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   242 ;;      Params:         0       0       0       0       0
   243 ;;      Locals:         0       0       0       0       0
   244 ;;      Temps:          3       0       0       0       0
   245 ;;      Totals:         3       0       0       0       0
   246 ;;Total ram usage:        3 bytes
   247 ;; Hardware stack levels required when called: 1
   248 ;; This function calls:
   249 ;;		_servo0
   250 ;;		_servo180
   251 ;;		_servo90
   252 ;; This function is called by:
   253 ;;		Startup code after reset
   254 ;; This function uses a non-reentrant model
   255 ;;
   256                           
   257     07AF                     _main:	
   258                           ;psect for function _main
   259                           
   260     07AF                     l603:	
   261                           ;incstack = 0
   262                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   263                           
   264                           
   265                           ;main.c: 55:   TRISA4=0x00;
   266     07AF  1683               	bsf	3,5	;RP0=1, select bank1
   267     07B0  1303               	bcf	3,6	;RP1=0, select bank1
   268     07B1  1205               	bcf	5,4	;volatile
   269                           
   270                           ;main.c: 56:   PORTAbits.RA4 = 0;
   271     07B2  1283               	bcf	3,5	;RP0=0, select bank0
   272     07B3  1303               	bcf	3,6	;RP1=0, select bank0
   273     07B4  1205               	bcf	5,4	;volatile
   274     07B5                     l605:
   275                           
   276                           ;main.c: 60:    _delay((unsigned long)((1000)*(4000000/4000.0)));
   277     07B5  3006               	movlw	6
   278     07B6  00F6               	movwf	??_main+2
   279     07B7  3013               	movlw	19
   280     07B8  00F5               	movwf	??_main+1
   281     07B9  30AD               	movlw	173
   282     07BA  00F4               	movwf	??_main
   283     07BB                     u47:
   284     07BB  0BF4               	decfsz	??_main,f
   285     07BC  2FBB               	goto	u47
   286     07BD  0BF5               	decfsz	??_main+1,f
   287     07BE  2FBB               	goto	u47
   288     07BF  0BF6               	decfsz	??_main+2,f
   289     07C0  2FBB               	goto	u47
   290     07C1  2FC2               	nop2
   291     07C2                     l607:
   292                           
   293                           ;main.c: 61:   servo0();
   294     07C2  120A  118A  275D  120A  118A  	fcall	_servo0
   295     07C7                     l609:
   296                           
   297                           ;main.c: 62:   _delay((unsigned long)((1000)*(4000000/4000.0)));
   298     07C7  3006               	movlw	6
   299     07C8  00F6               	movwf	??_main+2
   300     07C9  3013               	movlw	19
   301     07CA  00F5               	movwf	??_main+1
   302     07CB  30AD               	movlw	173
   303     07CC  00F4               	movwf	??_main
   304     07CD                     u57:
   305     07CD  0BF4               	decfsz	??_main,f
   306     07CE  2FCD               	goto	u57
   307     07CF  0BF5               	decfsz	??_main+1,f
   308     07D0  2FCD               	goto	u57
   309     07D1  0BF6               	decfsz	??_main+2,f
   310     07D2  2FCD               	goto	u57
   311     07D3  2FD4               	nop2
   312                           
   313                           ;main.c: 63:   servo90();
   314     07D4  120A  118A  2736  120A  118A  	fcall	_servo90
   315     07D9                     l611:
   316                           
   317                           ;main.c: 64:   _delay((unsigned long)((1000)*(4000000/4000.0)));
   318     07D9  3006               	movlw	6
   319     07DA  00F6               	movwf	??_main+2
   320     07DB  3013               	movlw	19
   321     07DC  00F5               	movwf	??_main+1
   322     07DD  30AD               	movlw	173
   323     07DE  00F4               	movwf	??_main
   324     07DF                     u67:
   325     07DF  0BF4               	decfsz	??_main,f
   326     07E0  2FDF               	goto	u67
   327     07E1  0BF5               	decfsz	??_main+1,f
   328     07E2  2FDF               	goto	u67
   329     07E3  0BF6               	decfsz	??_main+2,f
   330     07E4  2FDF               	goto	u67
   331     07E5  2FE6               	nop2
   332     07E6                     l613:
   333                           
   334                           ;main.c: 65:   servo180();
   335     07E6  120A  118A  2785  120A  118A  	fcall	_servo180
   336                           
   337                           ;main.c: 66:   _delay((unsigned long)((1000)*(4000000/4000.0)));
   338     07EB  3006               	movlw	6
   339     07EC  00F6               	movwf	??_main+2
   340     07ED  3013               	movlw	19
   341     07EE  00F5               	movwf	??_main+1
   342     07EF  30AD               	movlw	173
   343     07F0  00F4               	movwf	??_main
   344     07F1                     u77:
   345     07F1  0BF4               	decfsz	??_main,f
   346     07F2  2FF1               	goto	u77
   347     07F3  0BF5               	decfsz	??_main+1,f
   348     07F4  2FF1               	goto	u77
   349     07F5  0BF6               	decfsz	??_main+2,f
   350     07F6  2FF1               	goto	u77
   351     07F7  2FF8               	nop2
   352     07F8  2FB5               	goto	l605
   353     07F9  120A  118A  2800   	ljmp	start
   354     07FC                     __end_of_main:
   355                           
   356                           	psect	text1
   357     0736                     __ptext1:	
   358 ;; *************** function _servo90 *****************
   359 ;; Defined at:
   360 ;;		line 34 in file "main.c"
   361 ;; Parameters:    Size  Location     Type
   362 ;;		None
   363 ;; Auto vars:     Size  Location     Type
   364 ;;  i               2    2[COMMON] unsigned int 
   365 ;; Return value:  Size  Location     Type
   366 ;;                  1    wreg      void 
   367 ;; Registers used:
   368 ;;		wreg, status,2
   369 ;; Tracked objects:
   370 ;;		On entry : 0/0
   371 ;;		On exit  : 0/0
   372 ;;		Unchanged: 0/0
   373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   374 ;;      Params:         0       0       0       0       0
   375 ;;      Locals:         2       0       0       0       0
   376 ;;      Temps:          2       0       0       0       0
   377 ;;      Totals:         4       0       0       0       0
   378 ;;Total ram usage:        4 bytes
   379 ;; Hardware stack levels used: 1
   380 ;; This function calls:
   381 ;;		Nothing
   382 ;; This function is called by:
   383 ;;		_main
   384 ;; This function uses a non-reentrant model
   385 ;;
   386                           
   387     0736                     _servo90:	
   388                           ;psect for function _servo90
   389                           
   390     0736                     l583:	
   391                           ;incstack = 0
   392                           ; Regs used in _servo90: [wreg+status,2]
   393                           
   394                           
   395                           ;main.c: 35: unsigned int i;;main.c: 36:  for(i=0;i<50;i++)
   396     0736  01F2               	clrf	servo90@i
   397     0737  01F3               	clrf	servo90@i+1
   398     0738                     l14:
   399                           
   400                           ;main.c: 37:  {;main.c: 38: PORTAbits.RA4 = 1;
   401     0738  1283               	bcf	3,5	;RP0=0, select bank0
   402     0739  1303               	bcf	3,6	;RP1=0, select bank0
   403     073A  1605               	bsf	5,4	;volatile
   404     073B                     l589:
   405                           
   406                           ;main.c: 39: _delay((unsigned long)((1500)*(4000000/4000000.0)));
   407     073B  30D6               	movlw	214
   408     073C  00F0               	movwf	??_servo90
   409     073D                     u87:
   410     073D  2F3E               	nop2
   411     073E  2F3F               	nop2
   412     073F  0BF0               	decfsz	??_servo90,f
   413     0740  2F3D               	goto	u87
   414     0741  0000               	nop
   415     0742                     l591:
   416                           
   417                           ;main.c: 40: PORTAbits.RA4 = 0;
   418     0742  1283               	bcf	3,5	;RP0=0, select bank0
   419     0743  1303               	bcf	3,6	;RP1=0, select bank0
   420     0744  1205               	bcf	5,4	;volatile
   421                           
   422                           ;main.c: 41: _delay((unsigned long)((18500)*(4000000/4000000.0)));
   423     0745  3019               	movlw	25
   424     0746  00F1               	movwf	??_servo90+1
   425     0747  3005               	movlw	5
   426     0748  00F0               	movwf	??_servo90
   427     0749                     u97:
   428     0749  0BF0               	decfsz	??_servo90,f
   429     074A  2F49               	goto	u97
   430     074B  0BF1               	decfsz	??_servo90+1,f
   431     074C  2F49               	goto	u97
   432                           
   433                           ;main.c: 42:  }}
   434     074D  3001               	movlw	1
   435     074E  07F2               	addwf	servo90@i,f
   436     074F  1803               	skipnc
   437     0750  0AF3               	incf	servo90@i+1,f
   438     0751  3000               	movlw	0
   439     0752  07F3               	addwf	servo90@i+1,f
   440     0753  3000               	movlw	0
   441     0754  0273               	subwf	servo90@i+1,w
   442     0755  3032               	movlw	50
   443     0756  1903               	skipnz
   444     0757  0272               	subwf	servo90@i,w
   445     0758  1C03               	skipc
   446     0759  2F5B               	goto	u21
   447     075A  2F5C               	goto	u20
   448     075B                     u21:
   449     075B  2F38               	goto	l14
   450     075C                     u20:
   451     075C                     l16:
   452     075C  0008               	return
   453     075D                     __end_of_servo90:
   454                           
   455                           	psect	text2
   456     0785                     __ptext2:	
   457 ;; *************** function _servo180 *****************
   458 ;; Defined at:
   459 ;;		line 44 in file "main.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;  i               2    2[COMMON] unsigned int 
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      void 
   466 ;; Registers used:
   467 ;;		wreg, status,2
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   473 ;;      Params:         0       0       0       0       0
   474 ;;      Locals:         2       0       0       0       0
   475 ;;      Temps:          2       0       0       0       0
   476 ;;      Totals:         4       0       0       0       0
   477 ;;Total ram usage:        4 bytes
   478 ;; Hardware stack levels used: 1
   479 ;; This function calls:
   480 ;;		Nothing
   481 ;; This function is called by:
   482 ;;		_main
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486     0785                     _servo180:	
   487                           ;psect for function _servo180
   488                           
   489     0785                     l593:	
   490                           ;incstack = 0
   491                           ; Regs used in _servo180: [wreg+status,2]
   492                           
   493                           
   494                           ;main.c: 45: unsigned int i;;main.c: 46: for(i=0;i<50;i++)
   495     0785  01F2               	clrf	servo180@i
   496     0786  01F3               	clrf	servo180@i+1
   497     0787                     l19:
   498                           
   499                           ;main.c: 47:  {;main.c: 48: PORTAbits.RA4 = 1;
   500     0787  1283               	bcf	3,5	;RP0=0, select bank0
   501     0788  1303               	bcf	3,6	;RP1=0, select bank0
   502     0789  1605               	bsf	5,4	;volatile
   503     078A                     l599:
   504                           
   505                           ;main.c: 49: _delay((unsigned long)((2200)*(4000000/4000000.0)));
   506     078A  3003               	movlw	3
   507     078B  00F1               	movwf	??_servo180+1
   508     078C  30DA               	movlw	218
   509     078D  00F0               	movwf	??_servo180
   510     078E                     u107:
   511     078E  0BF0               	decfsz	??_servo180,f
   512     078F  2F8E               	goto	u107
   513     0790  0BF1               	decfsz	??_servo180+1,f
   514     0791  2F8E               	goto	u107
   515     0792  0000               	nop
   516     0793                     l601:
   517                           
   518                           ;main.c: 50: PORTAbits.RA4 = 0;
   519     0793  1283               	bcf	3,5	;RP0=0, select bank0
   520     0794  1303               	bcf	3,6	;RP1=0, select bank0
   521     0795  1205               	bcf	5,4	;volatile
   522                           
   523                           ;main.c: 51: _delay((unsigned long)((17800)*(4000000/4000000.0)));
   524     0796  3018               	movlw	24
   525     0797  00F1               	movwf	??_servo180+1
   526     0798  301C               	movlw	28
   527     0799  00F0               	movwf	??_servo180
   528     079A                     u117:
   529     079A  0BF0               	decfsz	??_servo180,f
   530     079B  2F9A               	goto	u117
   531     079C  0BF1               	decfsz	??_servo180+1,f
   532     079D  2F9A               	goto	u117
   533     079E  0000               	nop
   534                           
   535                           ;main.c: 52: }}
   536     079F  3001               	movlw	1
   537     07A0  07F2               	addwf	servo180@i,f
   538     07A1  1803               	skipnc
   539     07A2  0AF3               	incf	servo180@i+1,f
   540     07A3  3000               	movlw	0
   541     07A4  07F3               	addwf	servo180@i+1,f
   542     07A5  3000               	movlw	0
   543     07A6  0273               	subwf	servo180@i+1,w
   544     07A7  3032               	movlw	50
   545     07A8  1903               	skipnz
   546     07A9  0272               	subwf	servo180@i,w
   547     07AA  1C03               	skipc
   548     07AB  2FAD               	goto	u31
   549     07AC  2FAE               	goto	u30
   550     07AD                     u31:
   551     07AD  2F87               	goto	l19
   552     07AE                     u30:
   553     07AE                     l21:
   554     07AE  0008               	return
   555     07AF                     __end_of_servo180:
   556                           
   557                           	psect	text3
   558     075D                     __ptext3:	
   559 ;; *************** function _servo0 *****************
   560 ;; Defined at:
   561 ;;		line 25 in file "main.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;  i               2    2[COMMON] unsigned int 
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      void 
   568 ;; Registers used:
   569 ;;		wreg, status,2
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   575 ;;      Params:         0       0       0       0       0
   576 ;;      Locals:         2       0       0       0       0
   577 ;;      Temps:          2       0       0       0       0
   578 ;;      Totals:         4       0       0       0       0
   579 ;;Total ram usage:        4 bytes
   580 ;; Hardware stack levels used: 1
   581 ;; This function calls:
   582 ;;		Nothing
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588     075D                     _servo0:	
   589                           ;psect for function _servo0
   590                           
   591     075D                     l573:	
   592                           ;incstack = 0
   593                           ; Regs used in _servo0: [wreg+status,2]
   594                           
   595                           
   596                           ;main.c: 26:  unsigned int i;;main.c: 27:  for(i=0;i<50;i++)
   597     075D  01F2               	clrf	servo0@i
   598     075E  01F3               	clrf	servo0@i+1
   599     075F                     l9:
   600                           
   601                           ;main.c: 28:  {;main.c: 29: PORTAbits.RA4 = 1;
   602     075F  1283               	bcf	3,5	;RP0=0, select bank0
   603     0760  1303               	bcf	3,6	;RP1=0, select bank0
   604     0761  1605               	bsf	5,4	;volatile
   605     0762                     l579:
   606                           
   607                           ;main.c: 30: _delay((unsigned long)((800)*(4000000/4000000.0)));
   608     0762  309F               	movlw	159
   609     0763  00F0               	movwf	??_servo0
   610     0764                     u127:
   611     0764  2F65               	nop2
   612     0765  0BF0               	decfsz	??_servo0,f
   613     0766  2F64               	goto	u127
   614     0767  2F68               	nop2
   615     0768  2F69               	nop2
   616     0769                     l581:
   617                           
   618                           ;main.c: 31:  PORTAbits.RA4 = 0;
   619     0769  1283               	bcf	3,5	;RP0=0, select bank0
   620     076A  1303               	bcf	3,6	;RP1=0, select bank0
   621     076B  1205               	bcf	5,4	;volatile
   622                           
   623                           ;main.c: 32:  _delay((unsigned long)((19200)*(4000000/4000000.0)));}}
   624     076C  3019               	movlw	25
   625     076D  00F1               	movwf	??_servo0+1
   626     076E  30EE               	movlw	238
   627     076F  00F0               	movwf	??_servo0
   628     0770                     u137:
   629     0770  0BF0               	decfsz	??_servo0,f
   630     0771  2F70               	goto	u137
   631     0772  0BF1               	decfsz	??_servo0+1,f
   632     0773  2F70               	goto	u137
   633     0774  0000               	nop
   634     0775  3001               	movlw	1
   635     0776  07F2               	addwf	servo0@i,f
   636     0777  1803               	skipnc
   637     0778  0AF3               	incf	servo0@i+1,f
   638     0779  3000               	movlw	0
   639     077A  07F3               	addwf	servo0@i+1,f
   640     077B  3000               	movlw	0
   641     077C  0273               	subwf	servo0@i+1,w
   642     077D  3032               	movlw	50
   643     077E  1903               	skipnz
   644     077F  0272               	subwf	servo0@i,w
   645     0780  1C03               	skipc
   646     0781  2F83               	goto	u11
   647     0782  2F84               	goto	u10
   648     0783                     u11:
   649     0783  2F5F               	goto	l9
   650     0784                     u10:
   651     0784                     l11:
   652     0784  0008               	return
   653     0785                     __end_of_servo0:
   654     007E                     btemp	set	126	;btemp
   655     007E                     wtemp0	set	126
   656                           
   657                           	psect	config
   658                           
   659                           ;Config register CONFIG @ 0x2007
   660                           ;	Oscillator Selection bits
   661                           ;	FOSC = XT, XT oscillator
   662                           ;	Watchdog Timer Enable bit
   663                           ;	WDTE = OFF, WDT disabled
   664                           ;	Power-up Timer Enable bit
   665                           ;	PWRTE = OFF, PWRT disabled
   666                           ;	Brown-out Reset Enable bit
   667                           ;	BOREN = OFF, BOR disabled
   668                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   669                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   670                           ;	Data EEPROM Memory Code Protection bit
   671                           ;	CPD = OFF, Data EEPROM code protection off
   672                           ;	Flash Program Memory Write Enable bits
   673                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   674                           ;	In-Circuit Debugger Mode bit
   675                           ;	DEBUG = 0x1, unprogrammed default
   676                           ;	Flash Program Memory Code Protection bit
   677                           ;	CP = OFF, Code protection off
   678     2007                     	org	8199
   679     2007  3F39               	dw	16185

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_servo0
    _main->_servo180
    _main->_servo90

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      90
                                              4 COMMON     3     3      0
                             _servo0
                           _servo180
                            _servo90
 ---------------------------------------------------------------------------------
 (1) _servo90                                              4     4      0      30
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _servo180                                             4     4      0      30
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _servo0                                               4     4      0      30
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _servo0
   _servo180
   _servo90

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Oct 12 15:33:32 2023

                      l9 075F                       l11 0784                       l21 07AE  
                     l14 0738                       l16 075C                       l19 0787  
                     u10 0784                       u11 0783                       u20 075C  
                     u21 075B                       u30 07AE                       u31 07AD  
                     u47 07BB                       u57 07CD                       u67 07DF  
                     u77 07F1                       u87 073D                       u97 0749  
                    l601 0793                      l611 07D9                      l603 07AF  
                    l613 07E6                      l605 07B5                      l607 07C2  
                    l609 07C7                      l581 0769                      l573 075D  
                    l591 0742                      l583 0736                      l593 0785  
                    l579 0762                      l589 073B                      l599 078A  
                    u107 078E                      u117 079A                      u127 0764  
                    u137 0770                     _main 07AF                     btemp 007E  
                   start 0000                    ?_main 0070          __end_of_servo90 075D  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0074                   _TRISA4 042C  
                 _servo0 075D         __end_of_servo180 07AF                ??_servo90 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 07AF  
                ?_servo0 0070                ?_servo180 0070                  __ptext1 0736  
                __ptext2 0785                  __ptext3 075D                  _servo90 0736  
   end_of_initialization 07FC                  servo0@i 0072               ??_servo180 0070  
              _PORTAbits 0005           __end_of_servo0 0785      start_initialization 07FC  
               ??_servo0 0070                ___latbits 0002                 ?_servo90 0070  
              servo180@i 0072                 _servo180 0785                 servo90@i 0072  
