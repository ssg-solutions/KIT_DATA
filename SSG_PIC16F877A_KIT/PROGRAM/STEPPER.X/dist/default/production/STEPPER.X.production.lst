

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Oct 11 12:38:24 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     0006                     _PORTB	set	6
   169     0086                     _TRISB	set	134
   170                           
   171                           	psect	cinit
   172     07FC                     start_initialization:	
   173                           ; #config settings
   174                           
   175     07FC                     __initialization:
   176     07FC                     end_of_initialization:	
   177                           ;End of C runtime variable initialization code
   178                           
   179     07FC                     __end_of__initialization:
   180     07FC  0183               	clrf	3
   181     07FD  120A  118A  2EA9   	ljmp	_main	;jump to C main() function
   182                           
   183                           	psect	cstackCOMMON
   184     0070                     __pcstackCOMMON:
   185     0070                     ?_system_init:
   186     0070                     ??_system_init:	
   187                           ; 1 bytes @ 0x0
   188                           
   189     0070                     ?_full_drive:	
   190                           ; 1 bytes @ 0x0
   191                           
   192     0070                     ?_ms_delay:	
   193                           ; 1 bytes @ 0x0
   194                           
   195     0070                     ?_wave_drive:	
   196                           ; 1 bytes @ 0x0
   197                           
   198     0070                     ?_main:	
   199                           ; 1 bytes @ 0x0
   200                           
   201     0070                     ms_delay@val:	
   202                           ; 1 bytes @ 0x0
   203                           
   204                           
   205                           ; 2 bytes @ 0x0
   206     0070                     	ds	2
   207     0072                     ??_ms_delay:
   208     0072                     ms_delay@i:	
   209                           ; 1 bytes @ 0x2
   210                           
   211                           
   212                           ; 2 bytes @ 0x2
   213     0072                     	ds	2
   214     0074                     ms_delay@j:
   215                           
   216                           ; 2 bytes @ 0x4
   217     0074                     	ds	2
   218     0076                     ??_full_drive:
   219     0076                     ??_wave_drive:	
   220                           ; 1 bytes @ 0x6
   221                           
   222     0076                     full_drive@direction:	
   223                           ; 1 bytes @ 0x6
   224                           
   225     0076                     wave_drive@direction:	
   226                           ; 1 bytes @ 0x6
   227                           
   228                           
   229                           ; 1 bytes @ 0x6
   230     0076                     	ds	1
   231     0077                     ??_main:
   232     0077                     main@i:	
   233                           ; 1 bytes @ 0x7
   234                           
   235                           
   236                           ; 2 bytes @ 0x7
   237     0077                     	ds	2
   238     0079                     main@i_49:
   239                           
   240                           ; 2 bytes @ 0x9
   241     0079                     	ds	2
   242                           
   243                           	psect	maintext
   244     06A9                     __pmaintext:	
   245 ;;
   246 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   247 ;;
   248 ;; *************** function _main *****************
   249 ;; Defined at:
   250 ;;		line 37 in file "stepper_main.c"
   251 ;; Parameters:    Size  Location     Type
   252 ;;		None
   253 ;; Auto vars:     Size  Location     Type
   254 ;;  i               2    9[COMMON] int 
   255 ;;  i               2    7[COMMON] int 
   256 ;; Return value:  Size  Location     Type
   257 ;;                  1    wreg      void 
   258 ;; Registers used:
   259 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   260 ;; Tracked objects:
   261 ;;		On entry : B00/0
   262 ;;		On exit  : 0/0
   263 ;;		Unchanged: 0/0
   264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   265 ;;      Params:         0       0       0       0       0
   266 ;;      Locals:         4       0       0       0       0
   267 ;;      Temps:          0       0       0       0       0
   268 ;;      Totals:         4       0       0       0       0
   269 ;;Total ram usage:        4 bytes
   270 ;; Hardware stack levels required when called: 2
   271 ;; This function calls:
   272 ;;		_full_drive
   273 ;;		_ms_delay
   274 ;;		_system_init
   275 ;;		_wave_drive
   276 ;; This function is called by:
   277 ;;		Startup code after reset
   278 ;; This function uses a non-reentrant model
   279 ;;
   280                           
   281     06A9                     _main:	
   282                           ;psect for function _main
   283                           
   284     06A9                     l820:	
   285                           ;incstack = 0
   286                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   287                           
   288                           
   289                           ;stepper_main.c: 41: system_init();
   290     06A9  120A  118A  267C  120A  118A  	fcall	_system_init
   291     06AE                     l822:
   292                           
   293                           ;stepper_main.c: 47: for(int i=0;i<250;i++)
   294     06AE  01F7               	clrf	main@i
   295     06AF  01F8               	clrf	main@i+1
   296     06B0                     l828:
   297                           
   298                           ;stepper_main.c: 49: {;stepper_main.c: 51:             full_drive(0);
   299     06B0  3000               	movlw	0
   300     06B1  120A  118A  276E  120A  118A  	fcall	_full_drive
   301     06B6                     l830:
   302                           
   303                           ;stepper_main.c: 53: }
   304     06B6  3001               	movlw	1
   305     06B7  07F7               	addwf	main@i,f
   306     06B8  1803               	skipnc
   307     06B9  0AF8               	incf	main@i+1,f
   308     06BA  3000               	movlw	0
   309     06BB  07F8               	addwf	main@i+1,f
   310     06BC                     l832:
   311     06BC  0878               	movf	main@i+1,w
   312     06BD  3A80               	xorlw	128
   313     06BE  00FF               	movwf	btemp+1
   314     06BF  3080               	movlw	128
   315     06C0  027F               	subwf	btemp+1,w
   316     06C1  1D03               	skipz
   317     06C2  2EC5               	goto	u175
   318     06C3  30FA               	movlw	250
   319     06C4  0277               	subwf	main@i,w
   320     06C5                     u175:
   321     06C5  1C03               	skipc
   322     06C6  2EC8               	goto	u171
   323     06C7  2EC9               	goto	u170
   324     06C8                     u171:
   325     06C8  2EB0               	goto	l828
   326     06C9                     u170:
   327     06C9                     l834:
   328                           
   329                           ;stepper_main.c: 55: ms_delay(1000);
   330     06C9  30E8               	movlw	232
   331     06CA  00F0               	movwf	ms_delay@val
   332     06CB  3003               	movlw	3
   333     06CC  00F1               	movwf	ms_delay@val+1
   334     06CD  120A  118A  2684  120A  118A  	fcall	_ms_delay
   335     06D2                     l836:
   336                           
   337                           ;stepper_main.c: 60: for(int i=0;i<250;i++)
   338     06D2  01F9               	clrf	main@i_49
   339     06D3  01FA               	clrf	main@i_49+1
   340     06D4                     l842:
   341                           
   342                           ;stepper_main.c: 62: {;stepper_main.c: 64:             wave_drive(1);
   343     06D4  3001               	movlw	1
   344     06D5  120A  118A  26FA  120A  118A  	fcall	_wave_drive
   345     06DA                     l844:
   346                           
   347                           ;stepper_main.c: 68: }
   348     06DA  3001               	movlw	1
   349     06DB  07F9               	addwf	main@i_49,f
   350     06DC  1803               	skipnc
   351     06DD  0AFA               	incf	main@i_49+1,f
   352     06DE  3000               	movlw	0
   353     06DF  07FA               	addwf	main@i_49+1,f
   354     06E0                     l846:
   355     06E0  087A               	movf	main@i_49+1,w
   356     06E1  3A80               	xorlw	128
   357     06E2  00FF               	movwf	btemp+1
   358     06E3  3080               	movlw	128
   359     06E4  027F               	subwf	btemp+1,w
   360     06E5  1D03               	skipz
   361     06E6  2EE9               	goto	u185
   362     06E7  30FA               	movlw	250
   363     06E8  0279               	subwf	main@i_49,w
   364     06E9                     u185:
   365     06E9  1C03               	skipc
   366     06EA  2EEC               	goto	u181
   367     06EB  2EED               	goto	u180
   368     06EC                     u181:
   369     06EC  2ED4               	goto	l842
   370     06ED                     u180:
   371     06ED                     l848:
   372                           
   373                           ;stepper_main.c: 70: ms_delay(1000);
   374     06ED  30E8               	movlw	232
   375     06EE  00F0               	movwf	ms_delay@val
   376     06EF  3003               	movlw	3
   377     06F0  00F1               	movwf	ms_delay@val+1
   378     06F1  120A  118A  2684  120A  118A  	fcall	_ms_delay
   379     06F6  2EAE               	goto	l822
   380     06F7  120A  118A  2800   	ljmp	start
   381     06FA                     __end_of_main:
   382                           
   383                           	psect	text1
   384     06FA                     __ptext1:	
   385 ;; *************** function _wave_drive *****************
   386 ;; Defined at:
   387 ;;		line 214 in file "stepper_main.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;  direction       1    wreg     unsigned char 
   390 ;; Auto vars:     Size  Location     Type
   391 ;;  direction       1    6[COMMON] unsigned char 
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg, status,2, status,0, pclath, cstack
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   401 ;;      Params:         0       0       0       0       0
   402 ;;      Locals:         1       0       0       0       0
   403 ;;      Temps:          0       0       0       0       0
   404 ;;      Totals:         1       0       0       0       0
   405 ;;Total ram usage:        1 bytes
   406 ;; Hardware stack levels used: 1
   407 ;; Hardware stack levels required when called: 1
   408 ;; This function calls:
   409 ;;		_ms_delay
   410 ;; This function is called by:
   411 ;;		_main
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415     06FA                     _wave_drive:	
   416                           ;psect for function _wave_drive
   417                           
   418                           
   419                           ;incstack = 0
   420                           ; Regs used in _wave_drive: [wreg+status,2+status,0+pclath+cstack]
   421                           ;wave_drive@direction stored from wreg
   422     06FA  00F6               	movwf	wave_drive@direction
   423     06FB                     l792:
   424                           
   425                           ;stepper_main.c: 216:     if (direction == 1)
   426     06FB  0376               	decf	wave_drive@direction,w
   427     06FC  1D03               	btfss	3,2
   428     06FD  2EFF               	goto	u151
   429     06FE  2F00               	goto	u150
   430     06FF                     u151:
   431     06FF  2F34               	goto	l806
   432     0700                     u150:
   433     0700                     l794:
   434                           
   435                           ;stepper_main.c: 217:     {;stepper_main.c: 218:         PORTB = 0b00000001;
   436     0700  3001               	movlw	1
   437     0701  1283               	bcf	3,5	;RP0=0, select bank0
   438     0702  1303               	bcf	3,6	;RP1=0, select bank0
   439     0703  0086               	movwf	6	;volatile
   440     0704                     l796:
   441                           
   442                           ;stepper_main.c: 220:         ms_delay(1);
   443     0704  3001               	movlw	1
   444     0705  00F0               	movwf	ms_delay@val
   445     0706  3000               	movlw	0
   446     0707  00F1               	movwf	ms_delay@val+1
   447     0708  120A  118A  2684  120A  118A  	fcall	_ms_delay
   448     070D                     l798:
   449                           
   450                           ;stepper_main.c: 222:         PORTB = 0b00000010;
   451     070D  3002               	movlw	2
   452     070E  1283               	bcf	3,5	;RP0=0, select bank0
   453     070F  1303               	bcf	3,6	;RP1=0, select bank0
   454     0710  0086               	movwf	6	;volatile
   455                           
   456                           ;stepper_main.c: 224:         ms_delay(1);
   457     0711  3001               	movlw	1
   458     0712  00F0               	movwf	ms_delay@val
   459     0713  3000               	movlw	0
   460     0714  00F1               	movwf	ms_delay@val+1
   461     0715  120A  118A  2684  120A  118A  	fcall	_ms_delay
   462     071A                     l800:
   463                           
   464                           ;stepper_main.c: 226:         PORTB = 0b00000100;
   465     071A  3004               	movlw	4
   466     071B  1283               	bcf	3,5	;RP0=0, select bank0
   467     071C  1303               	bcf	3,6	;RP1=0, select bank0
   468     071D  0086               	movwf	6	;volatile
   469     071E                     l802:
   470                           
   471                           ;stepper_main.c: 228:         ms_delay(1);
   472     071E  3001               	movlw	1
   473     071F  00F0               	movwf	ms_delay@val
   474     0720  3000               	movlw	0
   475     0721  00F1               	movwf	ms_delay@val+1
   476     0722  120A  118A  2684  120A  118A  	fcall	_ms_delay
   477                           
   478                           ;stepper_main.c: 230:         PORTB = 0b00001000;
   479     0727  3008               	movlw	8
   480     0728  1283               	bcf	3,5	;RP0=0, select bank0
   481     0729  1303               	bcf	3,6	;RP1=0, select bank0
   482     072A  0086               	movwf	6	;volatile
   483     072B                     l804:
   484                           
   485                           ;stepper_main.c: 232:         ms_delay(1);
   486     072B  3001               	movlw	1
   487     072C  00F0               	movwf	ms_delay@val
   488     072D  3000               	movlw	0
   489     072E  00F1               	movwf	ms_delay@val+1
   490     072F  120A  118A  2684  120A  118A  	fcall	_ms_delay
   491     0734                     l806:
   492                           
   493                           ;stepper_main.c: 235:      if (direction == 0){
   494     0734  0876               	movf	wave_drive@direction,w
   495     0735  1D03               	btfss	3,2
   496     0736  2F38               	goto	u161
   497     0737  2F39               	goto	u160
   498     0738                     u161:
   499     0738  2F6D               	goto	l42
   500     0739                     u160:
   501     0739                     l808:
   502                           
   503                           ;stepper_main.c: 237:         PORTB = 0b00001000;
   504     0739  3008               	movlw	8
   505     073A  1283               	bcf	3,5	;RP0=0, select bank0
   506     073B  1303               	bcf	3,6	;RP1=0, select bank0
   507     073C  0086               	movwf	6	;volatile
   508     073D                     l810:
   509                           
   510                           ;stepper_main.c: 239:         ms_delay(1);
   511     073D  3001               	movlw	1
   512     073E  00F0               	movwf	ms_delay@val
   513     073F  3000               	movlw	0
   514     0740  00F1               	movwf	ms_delay@val+1
   515     0741  120A  118A  2684  120A  118A  	fcall	_ms_delay
   516     0746                     l812:
   517                           
   518                           ;stepper_main.c: 241:         PORTB = 0b00000100;
   519     0746  3004               	movlw	4
   520     0747  1283               	bcf	3,5	;RP0=0, select bank0
   521     0748  1303               	bcf	3,6	;RP1=0, select bank0
   522     0749  0086               	movwf	6	;volatile
   523                           
   524                           ;stepper_main.c: 243:         ms_delay(1);
   525     074A  3001               	movlw	1
   526     074B  00F0               	movwf	ms_delay@val
   527     074C  3000               	movlw	0
   528     074D  00F1               	movwf	ms_delay@val+1
   529     074E  120A  118A  2684  120A  118A  	fcall	_ms_delay
   530     0753                     l814:
   531                           
   532                           ;stepper_main.c: 245:         PORTB = 0b00000010;
   533     0753  3002               	movlw	2
   534     0754  1283               	bcf	3,5	;RP0=0, select bank0
   535     0755  1303               	bcf	3,6	;RP1=0, select bank0
   536     0756  0086               	movwf	6	;volatile
   537     0757                     l816:
   538                           
   539                           ;stepper_main.c: 247:         ms_delay(1);
   540     0757  3001               	movlw	1
   541     0758  00F0               	movwf	ms_delay@val
   542     0759  3000               	movlw	0
   543     075A  00F1               	movwf	ms_delay@val+1
   544     075B  120A  118A  2684  120A  118A  	fcall	_ms_delay
   545                           
   546                           ;stepper_main.c: 249:         PORTB = 0b00000001;
   547     0760  3001               	movlw	1
   548     0761  1283               	bcf	3,5	;RP0=0, select bank0
   549     0762  1303               	bcf	3,6	;RP1=0, select bank0
   550     0763  0086               	movwf	6	;volatile
   551     0764                     l818:
   552                           
   553                           ;stepper_main.c: 251:         ms_delay(1);
   554     0764  3001               	movlw	1
   555     0765  00F0               	movwf	ms_delay@val
   556     0766  3000               	movlw	0
   557     0767  00F1               	movwf	ms_delay@val+1
   558     0768  120A  118A  2684  120A  118A  	fcall	_ms_delay
   559     076D                     l42:
   560     076D  0008               	return
   561     076E                     __end_of_wave_drive:
   562                           
   563                           	psect	text2
   564     067C                     __ptext2:	
   565 ;; *************** function _system_init *****************
   566 ;; Defined at:
   567 ;;		line 77 in file "stepper_main.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;		None
   570 ;; Auto vars:     Size  Location     Type
   571 ;;		None
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg, status,2
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   581 ;;      Params:         0       0       0       0       0
   582 ;;      Locals:         0       0       0       0       0
   583 ;;      Temps:          0       0       0       0       0
   584 ;;      Totals:         0       0       0       0       0
   585 ;;Total ram usage:        0 bytes
   586 ;; Hardware stack levels used: 1
   587 ;; This function calls:
   588 ;;		Nothing
   589 ;; This function is called by:
   590 ;;		_main
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594     067C                     _system_init:	
   595                           ;psect for function _system_init
   596                           
   597     067C                     l606:	
   598                           ;incstack = 0
   599                           ; Regs used in _system_init: [wreg+status,2]
   600                           
   601                           
   602                           ;stepper_main.c: 79:     TRISB = 0x00;
   603     067C  1683               	bsf	3,5	;RP0=1, select bank1
   604     067D  1303               	bcf	3,6	;RP1=0, select bank1
   605     067E  0186               	clrf	6	;volatile
   606     067F                     l608:
   607                           
   608                           ;stepper_main.c: 81:     PORTB = 0x0F;
   609     067F  300F               	movlw	15
   610     0680  1283               	bcf	3,5	;RP0=0, select bank0
   611     0681  1303               	bcf	3,6	;RP1=0, select bank0
   612     0682  0086               	movwf	6	;volatile
   613     0683                     l27:
   614     0683  0008               	return
   615     0684                     __end_of_system_init:
   616                           
   617                           	psect	text3
   618     076E                     __ptext3:	
   619 ;; *************** function _full_drive *****************
   620 ;; Defined at:
   621 ;;		line 86 in file "stepper_main.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;  direction       1    wreg     unsigned char 
   624 ;; Auto vars:     Size  Location     Type
   625 ;;  direction       1    6[COMMON] unsigned char 
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0, pclath, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   635 ;;      Params:         0       0       0       0       0
   636 ;;      Locals:         1       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0
   638 ;;      Totals:         1       0       0       0       0
   639 ;;Total ram usage:        1 bytes
   640 ;; Hardware stack levels used: 1
   641 ;; Hardware stack levels required when called: 1
   642 ;; This function calls:
   643 ;;		_ms_delay
   644 ;; This function is called by:
   645 ;;		_main
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649     076E                     _full_drive:	
   650                           ;psect for function _full_drive
   651                           
   652                           
   653                           ;incstack = 0
   654                           ; Regs used in _full_drive: [wreg+status,2+status,0+pclath+cstack]
   655                           ;full_drive@direction stored from wreg
   656     076E  00F6               	movwf	full_drive@direction
   657     076F                     l760:
   658                           
   659                           ;stepper_main.c: 88:     if (direction == 1){
   660     076F  0376               	decf	full_drive@direction,w
   661     0770  1D03               	btfss	3,2
   662     0771  2F73               	goto	u131
   663     0772  2F74               	goto	u130
   664     0773                     u131:
   665     0773  2FB5               	goto	l776
   666     0774                     u130:
   667     0774                     l762:
   668                           
   669                           ;stepper_main.c: 90:         PORTB = 0b00000011;
   670     0774  3003               	movlw	3
   671     0775  1283               	bcf	3,5	;RP0=0, select bank0
   672     0776  1303               	bcf	3,6	;RP1=0, select bank0
   673     0777  0086               	movwf	6	;volatile
   674     0778                     l764:
   675                           
   676                           ;stepper_main.c: 92:         ms_delay(1);
   677     0778  3001               	movlw	1
   678     0779  00F0               	movwf	ms_delay@val
   679     077A  3000               	movlw	0
   680     077B  00F1               	movwf	ms_delay@val+1
   681     077C  120A  118A  2684  120A  118A  	fcall	_ms_delay
   682     0781                     l766:
   683                           
   684                           ;stepper_main.c: 94:         PORTB = 0b00000110;
   685     0781  3006               	movlw	6
   686     0782  1283               	bcf	3,5	;RP0=0, select bank0
   687     0783  1303               	bcf	3,6	;RP1=0, select bank0
   688     0784  0086               	movwf	6	;volatile
   689                           
   690                           ;stepper_main.c: 96:         ms_delay(1);
   691     0785  3001               	movlw	1
   692     0786  00F0               	movwf	ms_delay@val
   693     0787  3000               	movlw	0
   694     0788  00F1               	movwf	ms_delay@val+1
   695     0789  120A  118A  2684  120A  118A  	fcall	_ms_delay
   696     078E                     l768:
   697                           
   698                           ;stepper_main.c: 98:         PORTB = 0b00001100;
   699     078E  300C               	movlw	12
   700     078F  1283               	bcf	3,5	;RP0=0, select bank0
   701     0790  1303               	bcf	3,6	;RP1=0, select bank0
   702     0791  0086               	movwf	6	;volatile
   703     0792                     l770:
   704                           
   705                           ;stepper_main.c: 100:         ms_delay(1);
   706     0792  3001               	movlw	1
   707     0793  00F0               	movwf	ms_delay@val
   708     0794  3000               	movlw	0
   709     0795  00F1               	movwf	ms_delay@val+1
   710     0796  120A  118A  2684  120A  118A  	fcall	_ms_delay
   711                           
   712                           ;stepper_main.c: 102:         PORTB = 0b00001001;
   713     079B  3009               	movlw	9
   714     079C  1283               	bcf	3,5	;RP0=0, select bank0
   715     079D  1303               	bcf	3,6	;RP1=0, select bank0
   716     079E  0086               	movwf	6	;volatile
   717     079F                     l772:
   718                           
   719                           ;stepper_main.c: 104:         ms_delay(1);
   720     079F  3001               	movlw	1
   721     07A0  00F0               	movwf	ms_delay@val
   722     07A1  3000               	movlw	0
   723     07A2  00F1               	movwf	ms_delay@val+1
   724     07A3  120A  118A  2684  120A  118A  	fcall	_ms_delay
   725     07A8                     l774:
   726                           
   727                           ;stepper_main.c: 106:         PORTB = 0b00000011;
   728     07A8  3003               	movlw	3
   729     07A9  1283               	bcf	3,5	;RP0=0, select bank0
   730     07AA  1303               	bcf	3,6	;RP1=0, select bank0
   731     07AB  0086               	movwf	6	;volatile
   732                           
   733                           ;stepper_main.c: 108:         ms_delay(1);
   734     07AC  3001               	movlw	1
   735     07AD  00F0               	movwf	ms_delay@val
   736     07AE  3000               	movlw	0
   737     07AF  00F1               	movwf	ms_delay@val+1
   738     07B0  120A  118A  2684  120A  118A  	fcall	_ms_delay
   739     07B5                     l776:
   740                           
   741                           ;stepper_main.c: 112:     if (direction == 0){
   742     07B5  0876               	movf	full_drive@direction,w
   743     07B6  1D03               	btfss	3,2
   744     07B7  2FB9               	goto	u141
   745     07B8  2FBA               	goto	u140
   746     07B9                     u141:
   747     07B9  2FFB               	goto	l32
   748     07BA                     u140:
   749     07BA                     l778:
   750                           
   751                           ;stepper_main.c: 114:         PORTB = 0b00001001;
   752     07BA  3009               	movlw	9
   753     07BB  1283               	bcf	3,5	;RP0=0, select bank0
   754     07BC  1303               	bcf	3,6	;RP1=0, select bank0
   755     07BD  0086               	movwf	6	;volatile
   756     07BE                     l780:
   757                           
   758                           ;stepper_main.c: 116:         ms_delay(1);
   759     07BE  3001               	movlw	1
   760     07BF  00F0               	movwf	ms_delay@val
   761     07C0  3000               	movlw	0
   762     07C1  00F1               	movwf	ms_delay@val+1
   763     07C2  120A  118A  2684  120A  118A  	fcall	_ms_delay
   764     07C7                     l782:
   765                           
   766                           ;stepper_main.c: 118:         PORTB = 0b00001100;
   767     07C7  300C               	movlw	12
   768     07C8  1283               	bcf	3,5	;RP0=0, select bank0
   769     07C9  1303               	bcf	3,6	;RP1=0, select bank0
   770     07CA  0086               	movwf	6	;volatile
   771                           
   772                           ;stepper_main.c: 120:         ms_delay(1);
   773     07CB  3001               	movlw	1
   774     07CC  00F0               	movwf	ms_delay@val
   775     07CD  3000               	movlw	0
   776     07CE  00F1               	movwf	ms_delay@val+1
   777     07CF  120A  118A  2684  120A  118A  	fcall	_ms_delay
   778     07D4                     l784:
   779                           
   780                           ;stepper_main.c: 122:         PORTB = 0b00000110;
   781     07D4  3006               	movlw	6
   782     07D5  1283               	bcf	3,5	;RP0=0, select bank0
   783     07D6  1303               	bcf	3,6	;RP1=0, select bank0
   784     07D7  0086               	movwf	6	;volatile
   785     07D8                     l786:
   786                           
   787                           ;stepper_main.c: 124:         ms_delay(1);
   788     07D8  3001               	movlw	1
   789     07D9  00F0               	movwf	ms_delay@val
   790     07DA  3000               	movlw	0
   791     07DB  00F1               	movwf	ms_delay@val+1
   792     07DC  120A  118A  2684  120A  118A  	fcall	_ms_delay
   793                           
   794                           ;stepper_main.c: 126:         PORTB = 0b00000011;
   795     07E1  3003               	movlw	3
   796     07E2  1283               	bcf	3,5	;RP0=0, select bank0
   797     07E3  1303               	bcf	3,6	;RP1=0, select bank0
   798     07E4  0086               	movwf	6	;volatile
   799     07E5                     l788:
   800                           
   801                           ;stepper_main.c: 128:         ms_delay(1);
   802     07E5  3001               	movlw	1
   803     07E6  00F0               	movwf	ms_delay@val
   804     07E7  3000               	movlw	0
   805     07E8  00F1               	movwf	ms_delay@val+1
   806     07E9  120A  118A  2684  120A  118A  	fcall	_ms_delay
   807     07EE                     l790:
   808                           
   809                           ;stepper_main.c: 130:         PORTB = 0b00001001;
   810     07EE  3009               	movlw	9
   811     07EF  1283               	bcf	3,5	;RP0=0, select bank0
   812     07F0  1303               	bcf	3,6	;RP1=0, select bank0
   813     07F1  0086               	movwf	6	;volatile
   814                           
   815                           ;stepper_main.c: 132:         ms_delay(1);
   816     07F2  3001               	movlw	1
   817     07F3  00F0               	movwf	ms_delay@val
   818     07F4  3000               	movlw	0
   819     07F5  00F1               	movwf	ms_delay@val+1
   820     07F6  120A  118A  2684  120A  118A  	fcall	_ms_delay
   821     07FB                     l32:
   822     07FB  0008               	return
   823     07FC                     __end_of_full_drive:
   824                           
   825                           	psect	text4
   826     0684                     __ptext4:	
   827 ;; *************** function _ms_delay *****************
   828 ;; Defined at:
   829 ;;		line 260 in file "stepper_main.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;  val             2    0[COMMON] unsigned int 
   832 ;; Auto vars:     Size  Location     Type
   833 ;;  j               2    4[COMMON] unsigned int 
   834 ;;  i               2    2[COMMON] unsigned int 
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg, status,2
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   844 ;;      Params:         2       0       0       0       0
   845 ;;      Locals:         4       0       0       0       0
   846 ;;      Temps:          0       0       0       0       0
   847 ;;      Totals:         6       0       0       0       0
   848 ;;Total ram usage:        6 bytes
   849 ;; Hardware stack levels used: 1
   850 ;; This function calls:
   851 ;;		Nothing
   852 ;; This function is called by:
   853 ;;		_main
   854 ;;		_full_drive
   855 ;;		_wave_drive
   856 ;;		_half_drive
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860     0684                     _ms_delay:	
   861                           ;psect for function _ms_delay
   862                           
   863     0684                     l748:	
   864                           ;incstack = 0
   865                           ; Regs used in _ms_delay: [wreg+status,2]
   866                           
   867                           
   868                           ;stepper_main.c: 260: void ms_delay(unsigned int val);stepper_main.c: 261: {;stepper_mai
      +                          n.c: 263:      unsigned int i,j;;stepper_main.c: 265:         for(i=0;i<val;i++)
   869     0684  01F2               	clrf	ms_delay@i
   870     0685  01F3               	clrf	ms_delay@i+1
   871     0686  2E9E               	goto	l45
   872     0687                     l750:
   873                           
   874                           ;stepper_main.c: 267:             for(j=0;j<1650;j++);
   875     0687  01F4               	clrf	ms_delay@j
   876     0688  01F5               	clrf	ms_delay@j+1
   877     0689                     l756:
   878     0689  3001               	movlw	1
   879     068A  07F4               	addwf	ms_delay@j,f
   880     068B  1803               	skipnc
   881     068C  0AF5               	incf	ms_delay@j+1,f
   882     068D  3000               	movlw	0
   883     068E  07F5               	addwf	ms_delay@j+1,f
   884     068F  3006               	movlw	6
   885     0690  0275               	subwf	ms_delay@j+1,w
   886     0691  3072               	movlw	114
   887     0692  1903               	skipnz
   888     0693  0274               	subwf	ms_delay@j,w
   889     0694  1C03               	skipc
   890     0695  2E97               	goto	u111
   891     0696  2E98               	goto	u110
   892     0697                     u111:
   893     0697  2E89               	goto	l756
   894     0698                     u110:
   895     0698                     l758:
   896     0698  3001               	movlw	1
   897     0699  07F2               	addwf	ms_delay@i,f
   898     069A  1803               	skipnc
   899     069B  0AF3               	incf	ms_delay@i+1,f
   900     069C  3000               	movlw	0
   901     069D  07F3               	addwf	ms_delay@i+1,f
   902     069E                     l45:
   903     069E  0871               	movf	ms_delay@val+1,w
   904     069F  0273               	subwf	ms_delay@i+1,w
   905     06A0  1D03               	skipz
   906     06A1  2EA4               	goto	u125
   907     06A2  0870               	movf	ms_delay@val,w
   908     06A3  0272               	subwf	ms_delay@i,w
   909     06A4                     u125:
   910     06A4  1C03               	skipc
   911     06A5  2EA7               	goto	u121
   912     06A6  2EA8               	goto	u120
   913     06A7                     u121:
   914     06A7  2E87               	goto	l750
   915     06A8                     u120:
   916     06A8                     l50:
   917     06A8  0008               	return
   918     06A9                     __end_of_ms_delay:
   919     007E                     btemp	set	126	;btemp
   920     007E                     wtemp0	set	126
   921                           
   922                           	psect	config
   923                           
   924                           ;Config register CONFIG @ 0x2007
   925                           ;	Oscillator Selection bits
   926                           ;	FOSC = XT, XT oscillator
   927                           ;	Watchdog Timer Enable bit
   928                           ;	WDTE = OFF, WDT disabled
   929                           ;	Power-up Timer Enable bit
   930                           ;	PWRTE = OFF, PWRT disabled
   931                           ;	Brown-out Reset Enable bit
   932                           ;	BOREN = ON, BOR enabled
   933                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   934                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   935                           ;	Data EEPROM Memory Code Protection bit
   936                           ;	CPD = OFF, Data EEPROM code protection off
   937                           ;	Flash Program Memory Write Enable bits
   938                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   939                           ;	In-Circuit Debugger Mode bit
   940                           ;	DEBUG = 0x1, unprogrammed default
   941                           ;	Flash Program Memory Code Protection bit
   942                           ;	CP = OFF, Code protection off
   943     2007                     	org	8199
   944     2007  3F79               	dw	16249

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_full_drive
    _main->_wave_drive
    _wave_drive->_ms_delay
    _full_drive->_ms_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    8664
                                              7 COMMON     4     4      0
                         _full_drive
                           _ms_delay
                        _system_init
                         _wave_drive
 ---------------------------------------------------------------------------------
 (1) _wave_drive                                           1     1      0    2872
                                              6 COMMON     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _full_drive                                           1     1      0    2872
                                              6 COMMON     1     1      0
                           _ms_delay
 ---------------------------------------------------------------------------------
 (2) _ms_delay                                             6     4      2    2828
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _full_drive
     _ms_delay
   _ms_delay
   _system_init
   _wave_drive
     _ms_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Oct 11 12:38:24 2023

                     l32 07FB                       l50 06A8                       l42 076D  
                     l27 0683                       l45 069E      wave_drive@direction 0076  
    __end_of_system_init 0684                      l606 067C                      l608 067F  
                    l800 071A                      l810 073D                      l802 071E  
                    l812 0746                      l804 072B                      l820 06A9  
                    l750 0687                      l814 0753                      l806 0734  
                    l830 06B6                      l822 06AE                      l760 076F  
                    l816 0757                      l808 0739                      l832 06BC  
                    l770 0792                      l762 0774                      l818 0764  
                    l842 06D4                      l834 06C9                      l756 0689  
                    l748 0684                      l780 07BE                      l772 079F  
                    l764 0778                      l844 06DA                      l836 06D2  
                    l828 06B0                      l758 0698                      l790 07EE  
                    l782 07C7                      l774 07A8                      l766 0781  
                    l846 06E0                      l784 07D4                      l768 078E  
                    l776 07B5                      l792 06FB                      l848 06ED  
                    l786 07D8                      l778 07BA                      l794 0700  
                    l788 07E5                      l796 0704                      l798 070D  
                    u110 0698                      u111 0697                      u120 06A8  
                    u121 06A7                      u130 0774                      u131 0773  
                    u140 07BA                      u125 06A4                      u141 07B9  
                    u150 0700                      u151 06FF                      u160 0739  
                    u161 0738                      u170 06C9                      u171 06C8  
                    u180 06ED                      u181 06EC                      u175 06C5  
                    u185 06E9                     _main 06A9                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _TRISB 0086                    main@i 0077                    status 0003  
                  wtemp0 007E          __initialization 07FC              _system_init 067C  
           __end_of_main 06FA                   ??_main 0077         __end_of_ms_delay 06A9  
__end_of__initialization 07FC      full_drive@direction 0076           __pcstackCOMMON 0070  
            ms_delay@val 0070               __pmaintext 06A9                ?_ms_delay 0070  
           ?_system_init 0070               _full_drive 076E                  __ptext1 06FA  
                __ptext2 067C                  __ptext3 076E                  __ptext4 0684  
   end_of_initialization 07FC               ??_ms_delay 0072               _wave_drive 06FA  
            ?_full_drive 0070      start_initialization 07FC              ?_wave_drive 0070  
              ___latbits 0002             ??_full_drive 0076                ms_delay@i 0072  
              ms_delay@j 0074       __end_of_full_drive 07FC                 _ms_delay 0684  
               main@i_49 0079             ??_wave_drive 0076       __end_of_wave_drive 076E  
          ??_system_init 0070  
