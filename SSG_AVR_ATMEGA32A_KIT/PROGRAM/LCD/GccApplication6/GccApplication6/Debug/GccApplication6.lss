
GccApplication6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001c8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  000001c8  0000023c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000024c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000027c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  000002b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ac6  00000000  00000000  00000308  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000646  00000000  00000000  00000dce  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000410  00000000  00000000  00001414  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a4  00000000  00000000  00001824  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000391  00000000  00000000  000018c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000446  00000000  00000000  00001c59  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  0000209f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 ec       	ldi	r30, 0xC8	; 200
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <main>
  7a:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <LCD_Command>:

void LCD_Clear()
{
	LCD_Command (0x01);					/* Clear display */
	_delay_ms(2);
	LCD_Command (0x80);					/* Cursor 1st row 0th position */
  82:	98 b3       	in	r25, 0x18	; 24
  84:	9f 70       	andi	r25, 0x0F	; 15
  86:	28 2f       	mov	r18, r24
  88:	20 7f       	andi	r18, 0xF0	; 240
  8a:	92 2b       	or	r25, r18
  8c:	98 bb       	out	0x18, r25	; 24
  8e:	98 b3       	in	r25, 0x18	; 24
  90:	9e 7f       	andi	r25, 0xFE	; 254
  92:	98 bb       	out	0x18, r25	; 24
  94:	98 b3       	in	r25, 0x18	; 24
  96:	94 60       	ori	r25, 0x04	; 4
  98:	98 bb       	out	0x18, r25	; 24
  9a:	00 00       	nop
  9c:	98 b3       	in	r25, 0x18	; 24
  9e:	9b 7f       	andi	r25, 0xFB	; 251
  a0:	98 bb       	out	0x18, r25	; 24
  a2:	32 e4       	ldi	r19, 0x42	; 66
  a4:	3a 95       	dec	r19
  a6:	f1 f7       	brne	.-4      	; 0xa4 <LCD_Command+0x22>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <LCD_Command+0x28>
  aa:	28 b3       	in	r18, 0x18	; 24
  ac:	30 e1       	ldi	r19, 0x10	; 16
  ae:	83 9f       	mul	r24, r19
  b0:	c0 01       	movw	r24, r0
  b2:	11 24       	eor	r1, r1
  b4:	92 2f       	mov	r25, r18
  b6:	9f 70       	andi	r25, 0x0F	; 15
  b8:	89 2b       	or	r24, r25
  ba:	88 bb       	out	0x18, r24	; 24
  bc:	88 b3       	in	r24, 0x18	; 24
  be:	84 60       	ori	r24, 0x04	; 4
  c0:	88 bb       	out	0x18, r24	; 24
  c2:	00 00       	nop
  c4:	88 b3       	in	r24, 0x18	; 24
  c6:	8b 7f       	andi	r24, 0xFB	; 251
  c8:	88 bb       	out	0x18, r24	; 24
  ca:	83 ef       	ldi	r24, 0xF3	; 243
  cc:	91 e0       	ldi	r25, 0x01	; 1
  ce:	01 97       	sbiw	r24, 0x01	; 1
  d0:	f1 f7       	brne	.-4      	; 0xce <LCD_Command+0x4c>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <LCD_Command+0x52>
  d4:	00 00       	nop
  d6:	08 95       	ret

000000d8 <LCD_Char>:
  d8:	98 b3       	in	r25, 0x18	; 24
  da:	9f 70       	andi	r25, 0x0F	; 15
  dc:	28 2f       	mov	r18, r24
  de:	20 7f       	andi	r18, 0xF0	; 240
  e0:	92 2b       	or	r25, r18
  e2:	98 bb       	out	0x18, r25	; 24
  e4:	98 b3       	in	r25, 0x18	; 24
  e6:	91 60       	ori	r25, 0x01	; 1
  e8:	98 bb       	out	0x18, r25	; 24
  ea:	98 b3       	in	r25, 0x18	; 24
  ec:	94 60       	ori	r25, 0x04	; 4
  ee:	98 bb       	out	0x18, r25	; 24
  f0:	00 00       	nop
  f2:	98 b3       	in	r25, 0x18	; 24
  f4:	9b 7f       	andi	r25, 0xFB	; 251
  f6:	98 bb       	out	0x18, r25	; 24
  f8:	32 e4       	ldi	r19, 0x42	; 66
  fa:	3a 95       	dec	r19
  fc:	f1 f7       	brne	.-4      	; 0xfa <LCD_Char+0x22>
  fe:	00 c0       	rjmp	.+0      	; 0x100 <LCD_Char+0x28>
 100:	28 b3       	in	r18, 0x18	; 24
 102:	30 e1       	ldi	r19, 0x10	; 16
 104:	83 9f       	mul	r24, r19
 106:	c0 01       	movw	r24, r0
 108:	11 24       	eor	r1, r1
 10a:	92 2f       	mov	r25, r18
 10c:	9f 70       	andi	r25, 0x0F	; 15
 10e:	89 2b       	or	r24, r25
 110:	88 bb       	out	0x18, r24	; 24
 112:	88 b3       	in	r24, 0x18	; 24
 114:	84 60       	ori	r24, 0x04	; 4
 116:	88 bb       	out	0x18, r24	; 24
 118:	00 00       	nop
 11a:	88 b3       	in	r24, 0x18	; 24
 11c:	8b 7f       	andi	r24, 0xFB	; 251
 11e:	88 bb       	out	0x18, r24	; 24
 120:	83 ef       	ldi	r24, 0xF3	; 243
 122:	91 e0       	ldi	r25, 0x01	; 1
 124:	01 97       	sbiw	r24, 0x01	; 1
 126:	f1 f7       	brne	.-4      	; 0x124 <LCD_Char+0x4c>
 128:	00 c0       	rjmp	.+0      	; 0x12a <LCD_Char+0x52>
 12a:	00 00       	nop
 12c:	08 95       	ret

0000012e <LCD_Init>:
 12e:	8f ef       	ldi	r24, 0xFF	; 255
 130:	87 bb       	out	0x17, r24	; 23
 132:	87 e8       	ldi	r24, 0x87	; 135
 134:	93 e1       	ldi	r25, 0x13	; 19
 136:	01 97       	sbiw	r24, 0x01	; 1
 138:	f1 f7       	brne	.-4      	; 0x136 <LCD_Init+0x8>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <LCD_Init+0xe>
 13c:	00 00       	nop
 13e:	88 b3       	in	r24, 0x18	; 24
 140:	88 60       	ori	r24, 0x08	; 8
 142:	88 bb       	out	0x18, r24	; 24
 144:	83 e3       	ldi	r24, 0x33	; 51
 146:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 14a:	82 e3       	ldi	r24, 0x32	; 50
 14c:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 150:	88 e2       	ldi	r24, 0x28	; 40
 152:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 156:	8c e0       	ldi	r24, 0x0C	; 12
 158:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 15c:	86 e0       	ldi	r24, 0x06	; 6
 15e:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 162:	81 e0       	ldi	r24, 0x01	; 1
 164:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 168:	83 ef       	ldi	r24, 0xF3	; 243
 16a:	91 e0       	ldi	r25, 0x01	; 1
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <LCD_Init+0x3e>
 170:	00 c0       	rjmp	.+0      	; 0x172 <LCD_Init+0x44>
 172:	00 00       	nop
 174:	80 e8       	ldi	r24, 0x80	; 128
 176:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
 17a:	08 95       	ret

0000017c <LCD_String>:
 17c:	0f 93       	push	r16
 17e:	1f 93       	push	r17
 180:	cf 93       	push	r28
 182:	df 93       	push	r29
 184:	8c 01       	movw	r16, r24
 186:	c0 e0       	ldi	r28, 0x00	; 0
 188:	d0 e0       	ldi	r29, 0x00	; 0
 18a:	03 c0       	rjmp	.+6      	; 0x192 <LCD_String+0x16>
 18c:	0e 94 6c 00 	call	0xd8	; 0xd8 <LCD_Char>
 190:	21 96       	adiw	r28, 0x01	; 1
 192:	f8 01       	movw	r30, r16
 194:	ec 0f       	add	r30, r28
 196:	fd 1f       	adc	r31, r29
 198:	80 81       	ld	r24, Z
 19a:	81 11       	cpse	r24, r1
 19c:	f7 cf       	rjmp	.-18     	; 0x18c <LCD_String+0x10>
 19e:	df 91       	pop	r29
 1a0:	cf 91       	pop	r28
 1a2:	1f 91       	pop	r17
 1a4:	0f 91       	pop	r16
 1a6:	08 95       	ret

000001a8 <main>:
}
 
int main()
{

	LCD_Init();							/* Initialization of LCD*/
 1a8:	0e 94 97 00 	call	0x12e	; 0x12e <LCD_Init>

	LCD_String("SSG");		/* Write string on 1st line of LCD*/
 1ac:	80 e6       	ldi	r24, 0x60	; 96
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	0e 94 be 00 	call	0x17c	; 0x17c <LCD_String>
	LCD_Command(0xc0);					/* Go to 2nd line*/
 1b4:	80 ec       	ldi	r24, 0xC0	; 192
 1b6:	0e 94 41 00 	call	0x82	; 0x82 <LCD_Command>
	LCD_String("Hello World");			/* Write string on 2nd line*/
 1ba:	84 e6       	ldi	r24, 0x64	; 100
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	0e 94 be 00 	call	0x17c	; 0x17c <LCD_String>
 1c2:	ff cf       	rjmp	.-2      	; 0x1c2 <main+0x1a>

000001c4 <_exit>:
 1c4:	f8 94       	cli

000001c6 <__stop_program>:
 1c6:	ff cf       	rjmp	.-2      	; 0x1c6 <__stop_program>
